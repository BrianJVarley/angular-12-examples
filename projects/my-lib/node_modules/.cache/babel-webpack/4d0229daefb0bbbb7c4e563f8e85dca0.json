{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\nimport concat from 'lodash.concat';\nlet MyLibService = /*#__PURE__*/(() => {\n  class MyLibService {\n    doSomething() {\n      // Make sure tree shaking won't remove the lib during the build\n      console.log(concat([1], 2));\n    }\n\n  }\n\n  MyLibService.ɵfac = function MyLibService_Factory(t) {\n    return new (t || MyLibService)();\n  };\n\n  MyLibService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MyLibService,\n    factory: MyLibService.ɵfac,\n    providedIn: 'root'\n  });\n  return MyLibService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MyLibComponent = /*#__PURE__*/(() => {\n  class MyLibComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  MyLibComponent.ɵfac = function MyLibComponent_Factory(t) {\n    return new (t || MyLibComponent)();\n  };\n\n  MyLibComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MyLibComponent,\n    selectors: [[\"lib-my-lib\"]],\n    decls: 2,\n    vars: 0,\n    template: function MyLibComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" my-lib works! \");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return MyLibComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MyLibModule = /*#__PURE__*/(() => {\n  class MyLibModule {}\n\n  MyLibModule.ɵfac = function MyLibModule_Factory(t) {\n    return new (t || MyLibModule)();\n  };\n\n  MyLibModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MyLibModule\n  });\n  MyLibModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return MyLibModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * Public API Surface of my-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MyLibComponent, MyLibModule, MyLibService }; //# sourceMappingURL=my-lib.js.map","map":null,"metadata":{},"sourceType":"module"}